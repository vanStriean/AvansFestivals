<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Over Ons</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Acties</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Adres Gegevens</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Leeftijd</value>
  </data>
  <data name="AllEvents" xml:space="preserve">
    <value>Alle Evenmenten</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Hoeveelheid</value>
  </data>
  <data name="Available" xml:space="preserve">
    <value>Beschikbaar</value>
  </data>
  <data name="Banner" xml:space="preserve">
    <value>Banner</value>
  </data>
  <data name="Business" xml:space="preserve">
    <value>Zakelijk</value>
  </data>
  <data name="Checkout" xml:space="preserve">
    <value>Bekijk</value>
  </data>
  <data name="ChoiceBank" xml:space="preserve">
    <value>Kies uw bank</value>
  </data>
  <data name="ChoicePaymentMethod" xml:space="preserve">
    <value>Kies uw betaalmethode</value>
  </data>
  <data name="ChooseYourLanguage" xml:space="preserve">
    <value>Kies je taal</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Herhaal Wachtwoord</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Maak aan</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Datum</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Verwijder</value>
  </data>
  <data name="DeleteConfirmQuestion" xml:space="preserve">
    <value>Weet je zeker dat je de volgende gegevens wilt verwijderen?</value>
  </data>
  <data name="DeleteTicketType" xml:space="preserve">
    <value>Verwijder Ticket Type</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Beschrijving</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Wijzigen</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>Eind Datum</value>
  </data>
  <data name="Event" xml:space="preserve">
    <value>Evenment</value>
  </data>
  <data name="Events" xml:space="preserve">
    <value>Evenmenten</value>
  </data>
  <data name="FestivalMangement" xml:space="preserve">
    <value>Beheer</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>Afronden</value>
  </data>
  <data name="Firstname" xml:space="preserve">
    <value>Voornaam</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>Van</value>
  </data>
  <data name="GoToHome" xml:space="preserve">
    <value>Ga hier terug naar de homepagina</value>
  </data>
  <data name="Lastname" xml:space="preserve">
    <value>Achternaam</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Locatie</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Inloggen</value>
  </data>
  <data name="Logo" xml:space="preserve">
    <value>Logo</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Uitloggen</value>
  </data>
  <data name="MakeYourTicketChoice" xml:space="preserve">
    <value>Maak uw ticketkeuze</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Naam</value>
  </data>
  <data name="NewEvent" xml:space="preserve">
    <value>Nieuw Evenment</value>
  </data>
  <data name="NewTicketType" xml:space="preserve">
    <value>Nieuw Ticket Type</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Volgende</value>
  </data>
  <data name="NotLogged" xml:space="preserve">
    <value>Niet ingelogd</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Bestel</value>
  </data>
  <data name="OrderNow" xml:space="preserve">
    <value>Bestel nu</value>
  </data>
  <data name="OrderTicketLogged" xml:space="preserve">
    <value>Om tickets te bestellen moet je ingelogd zijn</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Wachtwoord</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>Betaling</value>
  </data>
  <data name="PaymentMethod" xml:space="preserve">
    <value>Betaal Manier</value>
  </data>
  <data name="PleaseLogin" xml:space="preserve">
    <value>Login aub</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Prijs</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Registreren</value>
  </data>
  <data name="RegisterNewUser" xml:space="preserve">
    <value>Registreer als nieuwe gebruiker</value>
  </data>
  <data name="ReturnToList" xml:space="preserve">
    <value>Terug naar lijst</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Opslaan</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Zoek</value>
  </data>
  <data name="SearchForFestivalOnName" xml:space="preserve">
    <value>Zoek op festival naam...</value>
  </data>
  <data name="SoldOut" xml:space="preserve">
    <value>Uitverkocht</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Begin Datum</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="ThankYouTicketAreSend" xml:space="preserve">
    <value>Bedankt voor je bestelling! Je tickets zijn verstuurd naar:</value>
  </data>
  <data name="Ticket" xml:space="preserve">
    <value>Ticket</value>
  </data>
  <data name="TicketForFestival" xml:space="preserve">
    <value>Ticket voor festival</value>
  </data>
  <data name="TicketKind" xml:space="preserve">
    <value>Ticket soort</value>
  </data>
  <data name="TicketOrderOverView" xml:space="preserve">
    <value>Besteloverzicht</value>
  </data>
  <data name="Tickets" xml:space="preserve">
    <value>Tickets</value>
  </data>
  <data name="TicketType" xml:space="preserve">
    <value>Ticket Type</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Totaal</value>
  </data>
  <data name="TotalAmount" xml:space="preserve">
    <value>Totaal bedrag</value>
  </data>
  <data name="Until" xml:space="preserve">
    <value>t/m</value>
  </data>
  <data name="UpcomingEvents" xml:space="preserve">
    <value>Aankomend evenementen</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Gebruikersnaam</value>
  </data>
  <data name="CollapseInOut" xml:space="preserve">
    <value>Vouw In/Uit</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Reacties</value>
  </data>
  <data name="NoCommentsAvailable" xml:space="preserve">
    <value>Er zijn geen reacties geplaats onder dit festival.</value>
  </data>
  <data name="WriteComment" xml:space="preserve">
    <value>Schrijf Reactie</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Reactie</value>
  </data>
  <data name="MessageValid" xml:space="preserve">
    <value>Schrijf alstublieft een valide reactie!</value>
  </data>
  <data name="CardNumber" xml:space="preserve">
    <value>Kaartnummer</value>
  </data>
  <data name="IbanNumber" xml:space="preserve">
    <value>IBAN-nummer</value>
  </data>
  <data name="Paying" xml:space="preserve">
    <value>Betalen</value>
  </data>
  <data name="PayingWith" xml:space="preserve">
    <value>Betalen met</value>
  </data>
  <data name="NoAccess" xml:space="preserve">
    <value>Je hebt geen toegang tot de pagina die u wilde bezoeken</value>
  </data>
  <data name="BusinessText" xml:space="preserve">
    <value>Onderneem snel en succesvol met Avans Festivals. Als ondernemer bent u continu op zoek naar vernieuwing, verbetering en vooruitgang. Bij dit proces past een professionele zakelijke partner die u kan ondersteunen. Zoals Avans Festivals.</value>
  </data>
</root>